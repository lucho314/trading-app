services:
  db:
    image: postgres:15-alpine
    container_name: trading-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: trading_pass
      POSTGRES_DB: trading
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - dokploy-network

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: trading-backend
    restart: always
    depends_on:
      - db
    env_file:
      - ${ENV_FILE:-/etc/dokploy/env/indicadores-tecnicos.env}
    ports:
      - "8001:8001"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trading-backend.rule=Host(`api.tradingdash.duckdns.org`)"
      - "traefik.http.routers.trading-backend.entrypoints=websecure"
      - "traefik.http.services.trading-backend.loadbalancer.server.port=8001"
    networks:
      - dokploy-network

  front:
    build:
      context: .
      dockerfile: apps/front/Dockerfile
    container_name: trading-front
    restart: always
    depends_on:
      - db
    env_file:
      - ${ENV_FILE:-/etc/dokploy/env/indicadores-tecnicos.env}
    ports:
     - "8080:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trading-front.rule=Host(`trading-app.duckdns.org`)"
      - "traefik.http.routers.trading-front.entrypoints=websecure"
      - "traefik.http.services.trading-front.loadbalancer.server.port=8080"
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: false

volumes:
  db_data:
